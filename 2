#include <iostream>
using namespace std;
struct node {
	int data;
	node* next;
};
typedef struct node NODE;
struct list {
	NODE* pHead;
	NODE* pTail;
};
typedef struct list LIST;
void KhoiTao(LIST& ds) {
	ds.pHead = NULL;
	ds.pTail = NULL;
}
int KiemTraRong(LIST ds) {
	if (ds.pHead == NULL) {
		return 1;
	}
	return 0;
}
NODE* TaoNODE(int x) {
	NODE* p;
	p = new NODE;
	p->data = x;
	p->next = NULL;
	return p;
}
void ChenCuoi(LIST& ds, NODE* p) {
	if (ds.pHead == NULL) {
		ds.pHead = p;
		ds.pTail = p;
	}
	else
	{
		ds.pTail->next = p;
		ds.pTail = p;
	}
}
void Nhap(LIST& ds, int n) {
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		NODE* p = new NODE;
		p = TaoNODE(x);
		ChenCuoi(ds, p);
	}
}
void Xuat(LIST ds) {
	NODE* p = new NODE;
	cout << "Danh sach lien ket: ";
	for (p = ds.pHead; p != NULL; p = p->next) {
		cout << p->data << " ";
	}
}
NODE* TimKiem(LIST ds, int x) {
	NODE* p;
	p = ds.pHead;
	while ((p != NULL) && (p->data != x)) {
		p = p->next;
	}
	return p;
}
void LeTang(LIST ds) {
	for (NODE* p1 = ds.pHead; p1 != NULL; p1 = p1->next) {
		for (NODE* p2 = p1->next; p2 != NULL; p2 = p2->next) {
			if (p1->data % 2 != 0 && p2->data % 2 != 0) {
				if (p1->data > p2->data) {
					int tmp = p1->data;
					p1->data = p2->data;
					p2->data = tmp;
				}
			}
		}
	}
	for (NODE* p = ds.pHead; p != NULL; p = p->next) {
		if (p->data % 2 != 0) {
			cout << p->data << " ";
		}
	}
}
void ChanGiam(LIST ds) {
	for (NODE* p1 = ds.pHead; p1 != NULL; p1 = p1->next) {
		for (NODE* p2 = p1->next; p2 != NULL; p2 = p2->next) {
			if (p1->data % 2 == 0 && p2->data % 2 == 0) {
				if (p1->data < p2->data) {
					int tmp = p1->data;
					p1->data = p2->data;
					p2->data = tmp;
				}
			}
		}
	}
	for (NODE* p = ds.pHead; p != NULL; p = p->next) {
		if (p->data % 2 == 0) {
			cout << p->data << " ";
		}
	}
}
int main() {
	LIST ds;
	int n;
	cout << "Nhap so luong danh sach: ";
	cin >> n;
	KhoiTao(ds);
	Nhap(ds, n);
	Xuat(ds);
	cout << endl;
	int x;
	do {
		cout << "Nhap gia tri can tim kiem: ";
		cin >> x;
		if (x % 2 != 0) {
			cout << "Nhap sai cu phap vui long nhap lai"<<"\n";
		}
	} while (x % 2 != 0);
	NODE* p = new NODE;
	p = TimKiem(ds, x);
	if (p == NULL) {
		cout << "Khong tim thay"<<"\n";
	}
	else cout << "Tim thay ket qua"<<"\n";
	cout << "Danh sach le tang la: ";
	LeTang(ds);
	cout << endl;
	cout << "Danh sach chan giam la: ";
	ChanGiam(ds);
	return 0;
}
